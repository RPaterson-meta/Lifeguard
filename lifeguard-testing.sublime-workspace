{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"release",
				"release_or_book"
			],
			[
				"has",
				"has_some_available	statement"
			],
			[
				"has_some_avail",
				"has_some_available"
			],
			[
				"node",
				"node_availability	statement"
			],
			[
				"stoi",
				"store_kit_bookings	import"
			],
			[
				"get",
				"get_kit_bookings	import"
			],
			[
				"read",
				"read_dictionary_from_file	function"
			],
			[
				"write",
				"write_dictionary_to_file	function"
			],
			[
				"check",
				"checkbox_category"
			],
			[
				"init",
				"initials_box"
			],
			[
				"form",
				"form_id"
			],
			[
				"cc",
				"cc_deployment_names"
			],
			[
				"bookings",
				"bookings_ledger	withstmt"
			],
			[
				"Kit",
				"KitBookingForm	class"
			],
			[
				"afile",
				"afilepath	param"
			],
			[
				"input",
				"input_dictionary	param"
			],
			[
				"BORDER",
				"border-color"
			],
			[
				"font",
				"font-size"
			],
			[
				"l3_cc3",
				"l3_cc3_hstead3	statement"
			],
			[
				"l3",
				"l3_cc3_sprout3	statement"
			],
			[
				"curren",
				"current_owners	statement"
			],
			[
				"booking",
				"booking_state	withstmt"
			],
			[
				"log",
				"log_kit_booking	function"
			],
			[
				"kit_book",
				"kit_bookings_dict	function"
			],
			[
				"current",
				"current_bookings_lines	statement"
			],
			[
				"l3_cc_",
				"l3_cc_sprout1	statement"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"back",
				"background-color"
			],
			[
				"max",
				"max-height"
			],
			[
				"date",
				"date_to	param"
			],
			[
				"time",
				"timezone_entry"
			],
			[
				"None",
				"None	instance"
			],
			[
				"table",
				"table_date_headings	statement"
			],
			[
				"Ki",
				"KitBookingForm	class"
			],
			[
				"login",
				"LoginForm"
			],
			[
				"previous",
				"previous_state	statement"
			],
			[
				"str",
				"strftime"
			],
			[
				"DATE",
				"DATE_TO	statement"
			],
			[
				"D",
				"DATE_TO	statement"
			],
			[
				"pa",
				"PAYROLL_ID	statement"
			],
			[
				"N",
				"NAUGHTY_BOARD	statement"
			],
			[
				"kit",
				"KIT_BOOKINGS"
			],
			[
				"manag",
				"MANAGE_NODES	statement"
			],
			[
				"life",
				"lifeguard_render"
			],
			[
				"iss",
				"ISSUES	statement"
			],
			[
				"buils",
				"BUILDS	statement"
			],
			[
				"team",
				"TEAM	statement"
			],
			[
				"orc",
				"ORCHESTRATION	statement"
			],
			[
				"views",
				"views3	module"
			],
			[
				"payroll",
				"PAYROLL_ID	statement"
			],
			[
				"border-co",
				"border-color"
			],
			[
				"background",
				"background-color"
			],
			[
				"li",
				"li	Tag"
			],
			[
				"flush",
				"flush_input"
			],
			[
				"expre",
				"expression	statement"
			],
			[
				"tier",
				"tier_failed"
			],
			[
				"system",
				"system_oids"
			],
			[
				"ne",
				"next_object	param"
			],
			[
				"disk",
				"disk_use	statement"
			],
			[
				"syste",
				"system_info	statement"
			],
			[
				"exe",
				"Executing"
			],
			[
				"displa",
				"displaySuccess"
			],
			[
				"decomm",
				"decommission"
			],
			[
				"homes",
				"homestead-prov"
			],
			[
				"monit",
				"monitUnmonitor"
			],
			[
				"mock",
				"mock_checker	statement"
			],
			[
				"health",
				"health_group"
			],
			[
				"checker",
				"checker_controller	statement"
			],
			[
				"Chece",
				"CheckerController	class"
			],
			[
				"assertLess",
				"assertLessEqual	function"
			],
			[
				"assertIs",
				"assertIsInstance	function"
			],
			[
				"Mock",
				"mock_viewer	module"
			],
			[
				"cher",
				"checkers	module"
			],
			[
				"test",
				"TestCase	class"
			],
			[
				"ass",
				"assertTrue	import"
			],
			[
				"chce",
				"checker3	statement"
			],
			[
				"__",
				"__init__	function"
			],
			[
				"display_",
				"display_loading_message"
			],
			[
				"status",
				"status_window	statement"
			],
			[
				"display",
				"display_loading_message"
			],
			[
				"error",
				"error_dict	statement"
			],
			[
				"first",
				"first_time	statement"
			],
			[
				"Checker",
				"CheckerController	class"
			],
			[
				"de",
				"defaultdict	class"
			],
			[
				"ke",
				"keywords"
			],
			[
				"key",
				"keyword"
			],
			[
				"HEALTH",
				"health_group"
			],
			[
				"er",
				"error_index	statement"
			],
			[
				"chc",
				"checkers	module"
			],
			[
				"fetch",
				"fetch_data"
			],
			[
				"su",
				"successful_events_count"
			],
			[
				"code_",
				"code_total_thread	statement"
			],
			[
				"code",
				"code_exp	param"
			],
			[
				"fet",
				"fetch_200_code_data"
			],
			[
				"oid",
				"oid_dictionary"
			],
			[
				"line",
				"line_list	param"
			],
			[
				"prev",
				"previous_length"
			],
			[
				"file",
				"current_file_name"
			],
			[
				"pr",
				"previous_file_name"
			],
			[
				"curre",
				"current_file_name	statement"
			],
			[
				"exc",
				"exception	function"
			],
			[
				"et",
				"etcd_health	statement"
			],
			[
				"cluster",
				"cluster_check	statement"
			],
			[
				"snm",
				"SubProcessSNMP	class"
			],
			[
				"check_",
				"check_output	function"
			],
			[
				"pad",
				"pad_pos	statement"
			],
			[
				"update",
				"update_bottom_line"
			],
			[
				"scroll_",
				"scroll_level	statement"
			],
			[
				"du",
				"debug	function"
			],
			[
				"scroll",
				"scroll_down_info_screen	function"
			],
			[
				"scr",
				"scroll_up_info_screen	function"
			],
			[
				"sc",
				"scroll_up	function"
			],
			[
				"last",
				"last_data	statement"
			],
			[
				"upper",
				"upper_left_x"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"heat",
				"healthy_states	statement"
			],
			[
				"monit_",
				"monit_lines	statement"
			],
			[
				"statisti",
				"statistic_window	statement"
			],
			[
				"home",
				"HOMESTEAD_OID_DICT	statement"
			],
			[
				"SPROUT",
				"SPROUT_OID_DICT	statement"
			],
			[
				"rtn",
				"rtn_string"
			],
			[
				"data",
				"data_pad"
			],
			[
				"num",
				"num_stats"
			],
			[
				"HOME",
				"HOMESTEAD_OID_DICT	statement"
			],
			[
				"SP",
				"SPROUT_OID_DICT	statement"
			],
			[
				"refre",
				"refresh_info_screen	function"
			],
			[
				"current_",
				"current_information_string	statement"
			],
			[
				"generate",
				"generate_initial_screen"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 196.0,
		"last_filter": "java",
		"selected_items":
		[
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"project",
				"Project: Edit Project"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"PYTH",
				"Set Syntax: Python"
			],
			[
				"sublimelinter: lt",
				"SublimeLinter: Lint This View"
			],
			[
				"css",
				"CSSLint: Run CSSLint"
			],
			[
				"spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"bash",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"Package Control: pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"late",
				"Set Syntax: LaTeX"
			],
			[
				"package control",
				"Package Control: Remove Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/rjp/Documents/l3dash/dictionary_setup.py",
		"/C/Users/rjp/Documents/l3dash/app/templates/kit_management.html",
		"/C/Users/rjp/Documents/l3dash/app/static/scripts/kit_release_button_links.js",
		"/C/Users/rjp/Documents/l3dash/app/static/scripts/kit_booking_input.js",
		"/C/Users/rjp/Documents/l3dash/app/views/kit_booking.py",
		"/C/Users/rjp/Documents/l3dash/app/views/views.py",
		"/C/Users/rjp/Documents/l3dash/app/templates/index.html",
		"/C/Users/rjp/Documents/l3dash/app/views/kit_management.py",
		"/C/Users/rjp/Documents/l3dash/app/views/viewfunctions.py",
		"/C/Users/rjp/Documents/l3dash/init/lifeguard.conf",
		"/C/Users/rjp/Documents/l3dash/app/templates/kit_booking.html",
		"/C/Users/rjp/Documents/l3dash/app/forms.py",
		"/C/Users/rjp/Documents/l3dash/app/views/index.py",
		"/C/Users/rjp/Documents/clearwater/CC_node_decommission_tool/clearwater-decommission.sh",
		"/C/Users/rjp/Documents/l3dash/app/views/kit_status.py",
		"/C/Users/rjp/Documents/l3dash/app/templates/kit_status.html",
		"/C/Users/rjp/Documents/l3dash/l3dash.sublime-project",
		"/C/Users/rjp/Documents/l3dash/app/static/scripts/checkbox.js",
		"/C/Users/rjp/Documents/l3dash/app/static/css/base_style.css",
		"/C/Users/rjp/Documents/l3dash/app/templates/base.html",
		"/C/Users/rjp/Documents/l3dash/app/static/scripts/learning.js",
		"/C/Users/rjp/Documents/l3dash/app/templates/kit_bookings.html",
		"/C/Users/rjp/Documents/l3dash/app/views/kit_bookings.py",
		"/C/Users/rjp/Documents/l3dash/app/static/scripts/kit_bookings_input.js",
		"/C/Users/rjp/Documents/l3dash/app/static/css/master.css",
		"/C/Users/rjp/Documents/l3dash/app/static/css/checkbox.css",
		"/C/Users/rjp/Documents/l3dash/app/templates/learning.js",
		"/C/Users/rjp/Documents/l3dash/app/static/css/bootstrap-3.3.6-dist/css/bootstrap.css",
		"/C/Users/rjp/Documents/l3dash/app/templates/whereabouts.html",
		"/C/Users/rjp/Documents/l3dash/app/views/whereabouts.py",
		"/C/Users/rjp/Documents/l3dash/app/templates/lifeguards.html",
		"/C/Users/rjp/Documents/l3dash/app/views/EE.py",
		"/C/Users/rjp/Documents/l3dash/.gitignore",
		"/C/Users/rjp/Documents/l3dash/config.py",
		"/C/Users/rjp/Documents/l3dash/app/__init__.py",
		"/C/Users/rjp/Documents/l3dash/run.py",
		"/C/Users/rjp/Documents/l3dash/app/templates/standard_page_template.html",
		"/C/Users/rjp/Documents/l3dash/app/templates/login.html",
		"/C/Users/rjp/Documents/l3dash/app/static/base_style.css",
		"/C/Users/rjp/Documents/clearwater/prototypes/snmpy.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/viewers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/checkers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/run.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/ut/test_checkers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/fetchers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/ut/mock_viewer.py",
		"/C/Users/rjp/Desktop/whereabouts.html",
		"/C/Users/rjp/Downloads/doc.html",
		"/C/Users/rjp/Documents/l3dash/app/views3.py",
		"/C/Users/rjp/Documents/l3dash/app/views2.py",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/rjp/Documents/l3dash/app/views.py",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/CSSLint.sublime-settings",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/rjp/Documents/stuff.html",
		"/C/Users/rjp/Documents/flask/microblog/app/templates/base.html",
		"/C/Users/rjp/Documents/flask/microblog/app/models.py",
		"/C/Users/rjp/Documents/flask/microblog/app/__init__.py",
		"/C/Users/rjp/Documents/flask/microblog/config.py",
		"/C/Users/rjp/Documents/flask/microblog/app/templates/login.html",
		"/C/Users/rjp/Documents/flask/microblog/app/templates/index.html",
		"/C/Users/rjp/Documents/flask/microblog/app/views.py",
		"/C/Users/rjp/Documents/flask/microblog/app/forms.py",
		"/C/Users/rjp/Documents/flask/microblog/run.py",
		"/C/Users/rjp/Documents/flask/microblog/db_downgrade.py",
		"/C/Users/rjp/Documents/flask/microblog/db_upgrade.py",
		"/C/Users/rjp/Documents/flask/microblog/db_migrate.py",
		"/C/Users/rjp/Documents/flask/microblog/db_create.py",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/HTML.sublime-settings",
		"/C/Users/rjp/Documents/clearwater/CC_Openstack_Deployment/openStackInstall.sh",
		"/C/Users/rjp/Documents/clearwater/CC_node_decommission_tool/node-decommission.sh",
		"/C/Users/rjp/Documents/clearwater/prototypes/update_nodes.PS1",
		"/C/Users/rjp/Documents/Bash/CC_node_decommission_tool/node-decommission.sh",
		"/C/Users/rjp/Documents/Bash/CC_node_decommission_tool/node-re-commission.sh",
		"/C/Users/rjp/Documents/Bash/CC_node_decommission_tool/bring_back_after_restart.sh",
		"/C/Users/rjp/Documents/Bash/cc_decomm/bring_back_after_restart.sh",
		"/C/Users/rjp/Documents/Bash/cc_decomm/cw-decommission-doug",
		"/C/Users/rjp/Documents/clearwater/doc_script/Project_Clearwater_Mib_Doc/pyLat.py",
		"/C/Users/rjp/Documents/clearwater/doc_script/Project_Clearwater_Mib_Doc/output_classes.py",
		"/C/Users/rjp/Documents/clearwater/doc_script/Project_Clearwater_Mib_Doc/generate_SNMP_docs.py",
		"/C/Users/rjp/Documents/clearwater/doc_script/Project_Clearwater_Mib_Doc/PROJECT-CLEARWATER-MIB",
		"/C/Users/rjp/Documents/Bash/bash_practice.sh",
		"/C/Users/rjp/Documents/Bash/CC_Openstack_Deployment/openStackInstall.sh",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/User/Shell-Unix-Generic.sublime-settings",
		"/C/Users/rjp/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/rjp/Documents/clearwater/prototypes/ut2/test_checkers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/ut2/mock_viewer.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/viewer.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/UI_prototype.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/playing.py",
		"/C/Users/rjp/Documents/More_scripts/mouse.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/ralfstats.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/tmp.py",
		"/C/Users/rjp/Documents/More_scripts/helloworld.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/checkers.py",
		"/C/Users/rjp/Documents/clearwater/prototypes/main.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/curses_mock_use.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/UI_prototype.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/Requirements.txt",
		"/C/Users/rjp/Documents/clearwater/health_tool/curses_test.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/viewers.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/cursesmock2.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/snmpy.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/curses_mock.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/curses_script2.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/script.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/Viewer.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/Checkers.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/design_phase_1.txt",
		"/C/Users/rjp/Documents/clearwater/health_tool/requirements.tex",
		"/C/Users/rjp/Documents/clearwater/health_tool/curses_script.py",
		"/C/Users/rjp/Documents/clearwater/health_tool/.gitattributes"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"<project>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"{% if not bookings[deployment[",
			"if not bookings[",
			"IF NOT BOOKINGS[DEP",
			"checked",
			"checked=\"false\"",
			"checked=\"false\",",
			"checked=\"false\", ",
			"checkbox",
			"checked=",
			"product",
			"ACTION",
			">\n",
			"checkbox-",
			"\");\n",
			"initials_box_input_field",
			"initials_box-",
			"book",
			"release",
			"select_all_button",
			"select_all",
			"\"checkbox-",
			"attr",
			"bookings['clearwater']",
			"cc_deployment_bookings",
			"print",
			"available",
			"toggle",
			"back",
			"cc_deployments",
			"form",
			"initials_box",
			"initials_box-",
			"node",
			"initials_box",
			"initials",
			"form",
			"btn-default",
			"title",
			"alert",
			"form",
			"bookings",
			"False",
			"self.",
			"print",
			"prop",
			"cc",
			"initials_box",
			"});",
			"BooleanField(\\(.*\\))",
			"cc3",
			"cc4",
			"check",
			"print",
			"Name",
			"initials",
			"print",
			"PAGE_NAME",
			"lifeguard",
			"#",
			"b",
			"bf",
			"bold",
			"items",
			"hover",
			".btn.btn-primary",
			"float",
			"login_user",
			"logout_user",
			"Please log in to access this page.",
			"sudo",
			"[[",
			"]]]",
			"[[[",
			"if \\[(.*)\\]",
			"\\[(.*)\\]",
			"\\[.*\\]",
			"add_error_info",
			"GOOD",
			"            Colour PAIR guide BY pair index:\n",
			"PAIR",
			"curses",
			"STATS_DISPLAYED",
			"INFO_DICT",
			"fetch_code_count",
			"self.oid_dictionary",
			"stats_dictionary",
			"STATS",
			"'''",
			".format",
			"format",
			"( *)(.*) = snmp.get\\(.*\\)",
			"( *)(.*) = snmp.get\\('.1.3.6.1.4.1.2021.11.50.0'\\)",
			" * .* = snmp.get\\('.1.3.6.1.4.1.2021.11.50.0'\\)",
			" *.* = snmp.get\\('.1.3.6.1.4.1.2021.11.50.0'\\)",
			".* = snmp.get('.1.3.6.1.4.1.2021.11.50.0')",
			" *.* = snmp.get('.1.3.6.1.4.1.2021.11.50.0')",
			"write_status",
			"health_addition",
			"max_cpu",
			"max_disk",
			"Args",
			"Input",
			"log_",
			"$?",
			"done",
			"sudo",
			"###############################################################################",
			"sprout",
			"headings",
			"UI_prototype",
			"] \\+= \\((.*)\\)",
			"] \\+= \\[(.*)\\]",
			"] \\+= \\[.*\\]",
			"called_methods.append\\(('.*')\\)",
			"called_methods.append\\('(.*)'\\)",
			"called_methods.append\\('.*'\\)",
			"first_checker",
			"viewer",
			"')\n",
			"pad",
			"data_pad",
			"write_information",
			"add_",
			"self.alive",
			"write_status",
			"data",
			"write_information",
			"wipe_info"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bookings['clearwater']",
			"fully_unbooked",
			"cc_deployment_bookings",
			"deployment",
			"cc_deployments",
			"True",
			"",
			"cc4",
			"cc3",
			"cc2",
			"reason_box",
			"{'input': BooleanField$1, 'name': 'STRING'}",
			"{'input': BooleanField[$1], 'name': 'STRING'}",
			"cc",
			"cc3",
			"*PAGE_NAME*",
			"Lifeguard",
			"/#",
			"subtopics",
			"if [[$1]]",
			"[[$1]]",
			"\\[\\[($1)\\]\\]",
			"\\[\\[$1\\]\\]",
			"$1$2 = snmp.get\\(self.system_oids[\\'$2\\']\\)",
			"$0$1 = snmp.get\\(self.system_oids[\\'$1\\']\\)",
			"$0$1 = snmp.get\\(self.system_oids[\\'$s\\']\\)",
			"MAX_CPU",
			"MAX_DISK",
			"Args",
			"\\e[1;32mdone\\e[0m",
			"hstead",
			"ralf",
			"viewers",
			"].append(($1))",
			"].append(([$1]))",
			"].append(($1))",
			"called_method[$1] += 1",
			"table_window",
			"self.data",
			"'/var/log/ralf/access_current.txt'",
			"get_top",
			"display_top",
			"register",
			"health_group",
			"viewer",
			"CPU",
			":",
			"self.screen",
			"screen",
			"self.status_window",
			"stdscr",
			"scroll_bar",
			"stats_pad",
			"healthwin",
			"self.screen.",
			"self.screen",
			"screen",
			"split(",
			"system_info"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.csslint_result_view":
	{
		"height": 118.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "lifeguard-testing.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"func",
				"app\\views\\viewfunctions.py"
			],
			[
				"dic",
				"dictionary_setup.py"
			],
			[
				"function",
				"app\\views\\viewfunctions.py"
			],
			[
				"kit",
				"app\\views\\kit_management.py"
			],
			[
				"kit_book",
				"app\\templates\\kit_booking.html"
			],
			[
				"inde",
				"app\\templates\\index.html"
			],
			[
				"kith",
				"app\\templates\\kit_management.html"
			],
			[
				"ki_m",
				"app\\templates\\kit_management.html"
			],
			[
				"views",
				"app\\views\\views.py"
			],
			[
				"",
				"app\\views\\kit_management.py"
			],
			[
				"kit_bookin",
				"app\\views\\kit_booking.py"
			],
			[
				"js",
				"app\\static\\scripts\\kit_booking_input.js"
			],
			[
				"ind",
				"app\\views\\index.py"
			],
			[
				"form",
				"app\\forms.py"
			],
			[
				"kit_status",
				"app\\views\\kit_status.py"
			],
			[
				"html",
				"app\\templates\\kit_status.html"
			],
			[
				"status",
				"app\\views\\kit_status.py"
			],
			[
				"kitbook",
				"app\\views\\kit_booking.py"
			],
			[
				"functions",
				"views\\viewfunctions.py"
			],
			[
				"stat",
				"templates\\kit_status.html"
			],
			[
				"kit_st",
				"views\\kit_status.py"
			],
			[
				"kit_boo",
				"templates\\kit_booking.html"
			],
			[
				"kitst",
				"templates\\kit_status.html"
			],
			[
				"py",
				"views\\kit_booking.py"
			],
			[
				".js",
				"static\\scripts\\checkbox.js"
			],
			[
				"kitbo",
				"static\\scripts\\kit_booking_input.js"
			],
			[
				"css",
				"static\\css\\base_style.css"
			],
			[
				"kithtml",
				"templates\\kit_booking.html"
			],
			[
				"kitjs",
				"static\\scripts\\kit_booking_input.js"
			],
			[
				"bas",
				"templates\\base.html"
			],
			[
				"fo",
				"forms.py"
			],
			[
				"kit_b",
				"views\\kit_booking.py"
			],
			[
				"view",
				"views\\viewfunctions.py"
			],
			[
				"fun",
				"views\\viewfunctions.py"
			],
			[
				"checkbox",
				"static\\scripts\\checkbox.js"
			],
			[
				"base",
				"templates\\base.html"
			],
			[
				"f",
				"forms.py"
			],
			[
				"mast",
				"static\\css\\master.css"
			],
			[
				"mas",
				"static\\css\\master.css"
			],
			[
				"base.",
				"templates\\base.html"
			],
			[
				"forms",
				"forms.py"
			],
			[
				"boot",
				"static\\css\\bootstrap-3.3.6-dist\\css\\bootstrap.css"
			],
			[
				"master",
				"static\\css\\master.css"
			],
			[
				"in",
				"views\\index.py"
			],
			[
				"life",
				"app\\templates\\lifeguards.html"
			],
			[
				"e",
				"app\\views\\EE.py"
			],
			[
				"where",
				"app\\templates\\whereabouts.html"
			],
			[
				"init",
				"app\\__init__.py"
			],
			[
				"conf",
				"config.py"
			],
			[
				"run",
				"run.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 137.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
